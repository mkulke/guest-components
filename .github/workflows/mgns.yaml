name: mgns

on:
  push:
    branches: [ "mkulke/image-pull-secret" ]

# Self-hosted runners do not set -o pipefail otherwise
defaults:
  run:
    shell: bash

jobs:
  registry-test:
    runs-on: 'ubuntu-22.04'
    # env:
    #   SKOPEO_VERSION: "1.12.0"

    steps:
    # - uses: actions-rs/toolchain@v1
    #   with:
    #     profile: minimal
    #     toolchain: stable

    # - uses: actions/setup-go@v4
    #   with:
    #     go-version: stable

    - name: Install dependencies
      # env:
      #   SGX_URL: https://download.01.org/intel-sgx/sgx_repo/ubuntu
      run: |
        # curl -L "${SGX_URL}/intel-sgx-deb.key" | sudo apt-key add -
        # echo "deb [arch=amd64] ${SGX_URL} jammy main" \
        #   | sudo tee /etc/apt/sources.list.d/intel-sgx.list
        sudo apt-get update
        sudo apt-get install -y \
          openssl
          # build-essential \
          # clang \
          # libassuan-dev \
          # libbtrfs-dev \
          # libdevmapper-dev \
          # libgpgme-dev \
          # libsgx-dcap-quote-verify-dev \
          # libtdx-attest-dev \
          # libtss2-dev \
          # pkg-config \
          # protobuf-compiler \
          # wget

    - uses: actions/checkout@v3
      with:
        path: image-rs

    # - uses: actions/checkout@v3
    #   with:
    #     repository: confidential-containers/kbs
    #     path: kbs

    # - uses: actions/checkout@v3
    #   with:
    #     repository: confidential-containers/attestation-agent
    #     path: attestation-agent

    # - name: Set up rust build cache
    #   uses: actions/cache@v3
    #   continue-on-error: false
    #   with:
    #     path: |
    #       ~/.cargo/registry/index/
    #       ~/.cargo/registry/cache/
    #       image-rs/target/
    #       kbs/target
    #       attestation-agent/target
    #     key: rust-${{ hashFiles('**/Cargo.toml') }}

    # - name: Set up skopeo build cache
    #   id: skopeo-cache
    #   uses: actions/cache@v3
    #   continue-on-error: false
    #   with:
    #     path: /usr/local/bin/skopeo
    #     key: skopeo-${{ env.SKOPEO_VERSION }}

    # - name: Build skopeo
    #   if: ${{ steps.cache.skopeo-cache.cache-hit != 'true' }}
    #   run: |
    #     wget -qO- "https://github.com/containers/skopeo/archive/refs/tags/v${SKOPEO_VERSION}.tar.gz" | tar xz
    #     cd "skopeo-${SKOPEO_VERSION}"
    #     DISABLE_DOCS=1 make bin/skopeo
    #     sudo cp bin/skopeo /usr/local/bin

    - name: Run hack/insecure-registry-with-auth.sh
      working-directory: image-rs/hack
      run: ./insecure-registry-with-auth.sh

